# ANALISIS DE DATOC CON R ----
# TALLER FINAL----

# Integrantes: Lina Roncancio - Fredy Gonzalez - Fabian Lasso

# Fuentes de datos: price_ratings.csv y restaurant_locations.csv

# Solución Taller:

## Parte 1. Fundamentos de R

### Punto 1.1. Loop If:
### Usted está diseñando un programa que devuelva mensajes automatizados a un restaurante, de acuerdo con la calificación de sus clientes
### en una escala de 0 a 30. Para ello, se le pide implementar un loop de R que:
  
### Imprima en consola "¡Hay mucho por mejorar!" si la calificación está entre 0 y 10 (excluyendo el 10).
### Imprima en consola "¡Bien! Pero podría ser excelente." si la calificación está entre 10 y 20 (sin incluir el 20).
### Imprima en consola "¡Excelente Servicio! Sigue así." si la calificación está entre 20 y 30.

if(calificación >= 0 & calificación < 10 ){
  print("¡Hay mucho por mejorar!")
} else if (calificación >= 10 & calificación < 20){
  print("¡Bien! Pero podría ser excelente.")
} else if(calificación >= 20 & calificación <= 30){
  print("¡Excelente Servicio! Sigue así.")
} else  {
  print("Inserte un valor entre 0 y 30")
}


### Punto 1.2. Funciones:
### Posteriormente, le indican que hubo un cambio en el sistema de calificaciones, que permite desagregar la calificación del restaurante 
### en 3 elementos: calidad de la comida, decoración y servicio, cada uno en escala de 0 a 30.

### Sin embargo, es necesario que se mantenga un indicador de calificación conjunto. Para ello, implemente una función en R que reciba 3 
### argumentos -calidad, decoracion, servicio- y devuelva la suma de los 3.

### Además, esta función debe incluir valores por defecto para las variables en caso de que el usuario no las incluya. Los valores por 
### defecto deben ser:
  
### Calidad: 10
### Decoración: 5
### Servicio: 15

calificacion<- function(calidad = 10, decoracion = 5, servicio = 15){
  total <- calidad + decoracion + servicio
  return(total)
}

calificacion(3,10,12)


## Parte 2. Tidyverse

## Luego de realizar las operaciones anteriores, se le entrega información sobre los precios y calificaciones de 168 restaurantes italianos 
## en Manhattan, separada en dos archivos: price_ratings.csv y restaurant_locations.csv.

## La primera tabla contiene un identificador único para los restaurantes (Id), una columna que incluye varias medidas asociadas al 
## restaurante (Variable) y el valor específico de dichas medidas (Value).

## La segunda tabla contiene un identificador único para los restaurantes (Id_restaurant), el nombre del Restaurante (Restaurant), y una 
## variable que indica si el restaurante se ubica al este o al oeste de 5th Avenue (East).

library(tidyverse)

### Punto 2.1. Cargar datos:
### Usando la función read_csv() cargue ambos archivos en su entorno de trabajo. Posteriormente imprima en consola la estructura de ambos
### dataframes y las primeras 8 filas.

price <- read_csv("C:/Users/USER/Downloads/price_ratings.csv")
glimpse(price)
### Es una base de datos conformada por 672 filas y 3 columnas.
head(price, 8)
###     1 Price       43
###     1 Food        22
###     1 Decor       18
###     1 Service     20
###     2 Price       32
###     2 Food        20
###     2 Decor       19
###     2 Service     19


location <- read_csv("C:/Users/USER/Downloads/restaurant_locations.csv")
glimpse(location)
### Es una base de datos conformada por 168 filas y 3 columnas.
head(location, 8)
###    1 Daniella Ristorante     0
###    2 Tello's Ristorante      0
###    3 Biricchino              0
###    4 Bottino                 0
###    5 Da Umberto              0
###    6 Le Madri                0
###    7 Le Zie                  0
###    8 Pasticcio               1

### ¿Ambos dataframes cumplen con que cada fila es una observación y cada columna es una variable?
### RTA: No, debido a que el dataframe price no cumple con estas caracteristicas, mientras que el dataframe locations si cumple con las
### caracteristicas que cada fila es una observación y cada columna es una variable.


### Punto 2.2. Pivot:
### Utilizando las funciones vistas en clase y que hacen parte del tidyverse, convierta el dataframe del archivo price_ratings.csv en 
### formato wide. Es decir, que Price, Food, Decor y Service sean columnas individuales.

price_wider <- price %>%
  pivot_wider(names_from = variable, values_from = valor)


### Punto 2.3. Joins:
### Usando las funciones vistas en clase, una las dos tablas con base en las columnas que identifican los restaurantes: Id y Id_restaurant.

data_id_restaurat <- price_wider%>%
  inner_join(location, by = c("Id" = "Id_restaurant"))


### Punto 2.4. Select y arrange:
### Con base en el dataframe completo que resulta del punto anterior, escriba la secuencia de comandos que devuelve un dataframe que 
### contenga las columnas de nombre, precio y servicio, ordenados según la variable precio.

data_completo <- data_id_restaurat %>%
  select(c(Restaurant, Price, Service))%>%
  arrange(Price)

data_completo %>%
  head(1)

data_completo %>%
  tail(1)

### ¿Cuál es el restaurante más caro? ¿Cuál es el más barato?
### RTA: Teniendo en cuenta el comando realizado se evidencia que el restaurante mas caro es Harry Cipriani con un precio de 65 y el 
### restaurante mas barato es Lamarca con un precio de 19.
  

### Punto 2.5. Group_by y Summarise:
### Usando el dataframe completo, construya un dataframe que agrupe los restaurantes de acuerdo con la variable East y calcule el precio 
### promedio de la comida.

data_completo2 <- data_completo %>%
  group_by(East)%>%
  summarise(precio_promedio = mean(Price))

### ¿La comida es más cara en el lado Este o el lado Oeste de Manhattan?
### RTA: Teniendo en cuenta el calculo del precio promedio, se evidencia que la comida es mas cara al lado Este de Manhattan.
setwd('C:/Users/Lina/Desktop/')

price <- read.csv("C:/Users/Lina/Desktop/price_ratings.csv")
glimpse(price)

location <- read.csv("C:/Users/Lina/Desktop/restaurant_locations.csv")

price_wider <- price %>%
  pivot_wider(names_from = variable, values_from = valor)

data_id_restaurat <- price_wider%>%
  inner_join(location, by = c("Id" = "Id_restaurant"))

data_completo <- data_id_restaurat%>%
  select(c(Restaurant, Price, Service))%>%
  arrange(Price)

data_completo %>% head(1)

data_completo %>%
  tail(1)
data_completo2 <- data_completo %>%
  group_by(East)%>%
  summarise(precio_promedio = mean(Price))

##Punto 3
##3.1. Regresión lineal
Usando la función lm() de R, construya una regresión lineal de la variable Price contra Food, Decor, Service y East y guarde el resultado en un objeto llamado regresion.

Posteriormente, ejecute el comando summary(regresion).

¿Todas las variables son estadísticamente significaticas? 
  ¿Qué variable parece influir más en el precio de la comida?
##RTA
  reg <- lm(Price ~ 
            Food 
          + Decor 
          + Service 
          + East, data = data_completo)

summary(reg)

##Punto 4
## 4.1 Cree un gráfico con la estimación de la función de densidad para la variable Service, 
con el atributo linetype asociado a la variable East. 
Añada un título de su elección y cambie los nombres de los ejes y la leyenda para que aparezcan en español.

¿Cuál zona de Manhattan tiende a tener mejor calificación de servicio?


ggplot(Data_completa, aes(Service, linetype = factor(East)))+
  geom_density() +
  labs(
    title = "Densidad Servicio",
    x = "Servicio",
    y = "Densidad",
    linetype = "Este"
  )

## 4.1 Cree un gráfico de dispersión entre las variables Price y Decor, donde el color de los puntos esté asociado a la variable East. Modifique la escala de color de tal forma que:

El color de 0 sea azul y de 1 sea verde.
La etiqueta de 0 sea Oeste y de 1 sea Este.
Según el gráfico, ¿A qué zona de Manhattan pertenece el restaurante con menor precio?
##RTA
  graf_2 <- ggplot(bases_unidas, aes(x=Price, y=Decor, color=factor(East, labels = c("Oeste","Este")))) +
  geom_point() + 
  scale_color_manual(values=c('#1874CD','#008B00'))+
  labs(
    title="Grafico Dispersión",
    x = "Precio",
    y = "Decoración",
    color = "Zona",
  )

graf_2
  
